{"version":3,"sources":["components.js","user-studies/abx.js","user-study.js","index.js"],"names":["updateChoice","Audio","name","file","audioRef","setAudioEnded","className","controls","ref","controlsList","onEnded","src","type","AudioRadioButton","index","choice","setChoice","audioEnded","radioButton","onClick","id","value","htmlFor","AudioRadioButtonGroup","files","audioRefs","audioButton","map","item","key","Instruction_Page","audioRef_1","setIndex","UpdateAudio","href","setRefEnded","setFirstEnded","setSecondEnded","clickHandler","Task_Page_Conditional","taskInstruction","refEnded","Cond_stimuli","audioRef_2","audioRef_3","useState","firstEnded","secondEnded","refInstruction","refSection","task_pt1","next_button","Task_Page","ABX","useRef","source","current","pause","load","UserStudy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3b9aa5c.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\n\nimport './css/components.css'\n\n\n/*******************************************************************************\nComponents\n*******************************************************************************/\n\nlet updateChoice;\n\n// export function Shuffle(arr) {\n// \tvar j, x, i;\n//     for (i = arr.length - 1; i > 0; i--) {\n//         j = Math.floor(Math.random() * (i + 1));\n//         x = arr[i];\n//         arr[i] = arr[j];\n//         arr[j] = x;\n//     }\n//     return arr;\n// }\n\nexport function Shuffle(arr, n) {\n\tif (n === undefined) {\n\t\tn = arr.length;\n\t}\n\telse if (n <= 0) {\n\t\tn = arr.length;\n\t\tconsole.warn('Requested samples is not greater than 0. Using full array.');\n\t}\n\telse if (n > arr.length) {\n\t\tn = arr.length;\n\t\tconsole.warn('Requested more samples than there are available. Using full array.');\n\t}\n\tvar nInd = n;\n\n\tvar currIndex = arr.length, tempValue, randIndex;\n\t// While there remain elements to shuffle...\n\twhile (0 !== currIndex) {\n\t\t// Pick a remaining element...\n\t\trandIndex = Math.floor(Math.random() * currIndex);\n\t\tcurrIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttempValue = arr[currIndex];\n\t\tarr[currIndex] = arr[randIndex];\n\t\tarr[randIndex] = tempValue;\n\t}\n\treturn arr.slice(0, nInd);\n}\n\n//add onEnded to audio element\nexport function Audio({ name, file, audioRef, setAudioEnded }) {\n\treturn (\n\t\t<audio \n\t\t\tclassName={`audio-single`} \n\t\t\tcontrols ref={audioRef} \n\t\t\tcontrolsList=\"nodownload\" \n\t\t\tonEnded={() => {if (typeof(setAudioEnded) !== \"undefined\") {setAudioEnded(true);}}}>\n\t\t\t<source src={`audio/${file}`} type='audio/wav'/>\n\t\t</audio>\n\t);\n};\n\nexport function AudioRadioButton({ name, file, index, choice, setChoice, audioRef, audioEnded, setAudioEnded }) {\n\tlet radioButton = <div className=\"col-1\"></div>;\n\tif (audioEnded) {\n\t\tradioButton = (\n\t\t\t\t<div className={`check col-1 ${index === choice ? \"selected\" : \"\"}`} onClick={() => setChoice(index)}>\n\t\t\t\t\t<div className=\"inside\"></div>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n\treturn (\n\t\t<li className=\"grid\">\n\t\t\t<input type=\"radio\" id={name} value=\"A\" name={name}/>\n\t\t\t{radioButton}\n\t\t\t<label htmlFor={name} className=\"col-3\"><Audio name={name} file={file} audioRef={audioRef} setAudioEnded={setAudioEnded}/></label>\n\t\t</li>\n\t);  \n};\n\nexport function AudioRadioButtonGroup({ name, files, choice, setChoice, audioRefs, audioEnded, setAudioEnded }) {\n\tupdateChoice = setChoice;\n\tconst audioButton = files.map((item, key) => \n\t\t<AudioRadioButton \n\t\t\tname={name} \n\t\t\tfile={item} \n\t\t\tkey={key} \n\t\t\tindex={key} \n\t\t\tchoice={choice} \n\t\t\tsetChoice={setChoice}\n\t\t\taudioRef={audioRefs[key]}\n\t\t\taudioEnded={audioEnded}\n\t\t\tsetAudioEnded={setAudioEnded}\n\t\t/>\n\t);\n\treturn (\n\t\t<ul className=\"AudioRadioButtonGroup\">\n\t\t\t{audioButton}\n\t\t</ul>\n\t);\n};\n\nexport {updateChoice};","import React, { useState, useRef, useEffect } from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nimport { Audio } from '../components'\nimport { AudioRadioButtonGroup } from '../components'\nimport { Shuffle } from '../components'\nimport { updateChoice } from '../components'\n\nimport '../css/user-studies.css'\n\nfunction clickHandler(index, setIndex, UpdateAudio, setRefEnded, setFirstEnded, setSecondEnded) {\n\tsetIndex(index + 1);\n\tif (index > 0) {\n\t\tUpdateAudio();\n\t\tupdateChoice(-1);\n\t\tsetRefEnded(false);\n\t\tsetFirstEnded(false);\n\t\tsetSecondEnded(false);\n\t}\n}\n\nfunction Instruction_Page(audioRef_1, index, setIndex, UpdateAudio) {\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t<div className=\"section col-all\">\n\t\t\t\t<ReactMarkdown>\n\t\t\t\t\t{`# **Congratulations!**\n\t\t\t\t\t\\nYou have passed the qualifications for our study\\u2014making you \n\t\t\t\t\teligible for additional compensation should you finish the audio evaluation.\n\t\t\t\t\t\\n### **Instructions**\n\t\t\t\t\t\\nIn this experiment, you will do a series of two-way \n\t\t\t\t\tcomparisons. In each comparison, you will first be presented a reference recording. \n\t\t\t\t\tYou will then be presented two time-stretched versions of the reference that either \n\t\t\t\t\tincrease or decrease its duration/speed. After listening to all three recordings, \n\t\t\t\t\tyou will be asked to choose the higher-quality (more natural, fewer audio artifacts) \n\t\t\t\t\ttime-stretched audio.\n\t\t\t\t\t\\n**NOTE:** The time-stretched recordings will not have the \n\t\t\t\t\tsame duration as the original audio.\n\t\t\t\t\t\\nOn the next page, you will receive an example task.\n\t\t\t\t\t`}\n\t\t\t\t</ReactMarkdown>\n\t\t\t</div>\n\t\t\t<div className='section col-2 align-right'>\n\t\t\t\t<a href=\"#\" className=\"button\" onClick={() => clickHandler(index, setIndex, UpdateAudio)}>Next</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction Task_Page_Conditional(taskInstruction, files, choice, setChoice, audioRef, refEnded, audioEnded, setAudioEnded) {\n\treturn (\n\t\t<div className=\"section col-all\">\n\t\t\t{taskInstruction}\n\t\t\t<AudioRadioButtonGroup name={'test-abx'} \n\t\t\t\tfiles={files} \n\t\t\t\tchoice={choice}\n\t\t\t\tsetChoice={setChoice}\n\t\t\t\taudioRefs={audioRef}\n\t\t\t\trefEnded={refEnded}\n\t\t\t\taudioEnded={audioEnded}\n\t\t\t\tsetAudioEnded={setAudioEnded}\n\t\t\t\t/>\n\t\t</div>\n\t);\n}\n\n\nfunction Task_Page(audioRef_1, audioRef_2, audioRef_3, index, setIndex, choice, setChoice, UpdateAudio, refEnded, setRefEnded, firstEnded, setFirstEnded, secondEnded, setSecondEnded) {\t\n\n\tlet refInstruction = (\n\t\t// <br></br>\n\t\t<ReactMarkdown>{`**Sample Question**`}</ReactMarkdown>\n\t);\n\n\tif (!refEnded) {\n\t\trefInstruction = (\n\t\t\t<ReactMarkdown>{`Please listen to the following reference audio in its entirety.`}</ReactMarkdown>\n\t\t);\n\t}\n\n\tconst refSection = (\n\t\t<div className='section col-all'>\n\t\t\t{refInstruction}\n\t\t\t<Audio name={'test-abx'} \n\t\t\t\tfile={'extreme_bad_stretches/p333_252_mic2_2.0_noisy.wav'} \n\t\t\t\taudioRef={audioRef_1} \n\t\t\t\tsetAudioEnded={setRefEnded}\n\t\t\t\t/>\n\t\t</div>\n\t);\n\n\tlet taskInstruction = null;\n\tlet task_pt1 = null;\n\tconst files = ['extreme_bad_stretches/p333_252_mic2_2.0_noisy.wav','extreme_bad_stretches/p333_252_mic2_2.0_noisy.wav'];\n\n\tif (secondEnded) {\n\t\ttaskInstruction = (\n\t\t\t<ReactMarkdown>{`Please select the higher-quality time-stretched audio, which is the option on the bottom.`}</ReactMarkdown>\n\t\t);\n\t\ttask_pt1 = Task_Page_Conditional(taskInstruction, files, choice, setChoice, \n\t\t\t[audioRef_2, audioRef_3], refEnded, secondEnded, setSecondEnded);\n\t}\n\telse if (firstEnded) {\n\t\ttaskInstruction = (\n\t\t\t<ReactMarkdown>{`Please listen to the example of a **well** time-stretched audio in its entirety.`}</ReactMarkdown>\n\t\t);\n\t\ttask_pt1 = Task_Page_Conditional(taskInstruction, files, choice, setChoice, \n\t\t\t[audioRef_2, audioRef_3], refEnded, secondEnded, setSecondEnded);\n\t}\n\telse if (refEnded) {\n\t\ttaskInstruction = (\n\t\t\t<ReactMarkdown>{`Please listen to the example of a **poorly** time-stretched audio in its entirety.`}</ReactMarkdown>\n\t\t);\n\t\ttask_pt1 = Task_Page_Conditional(taskInstruction, [files[0]], choice, setChoice, \n\t\t\t[audioRef_2], refEnded, firstEnded, setFirstEnded);\n\t}\n\n\tlet next_button = null;\n\tif (choice !== -1) {\n\t\tnext_button = (\n\t\t\t<div className='section col-2 align-right'>\n\t\t\t\t<a href=\"https://btangsp.github.io/essae_rating/\" className=\"button\">Next</a>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t{refSection}\n\t\t\t{task_pt1}\n\t\t\t{next_button}\n\t\t</div>\n\t);\n}\n\nfunction PostTest_Page(index, setIndex, textInput, setTextInput) {\n\treturn (\n\t\t<div className=\"container grid\">\n\t\t\t<ReactMarkdown>{`#### **Post-Evaluation Survey**\\nPlease describe any issues \n\t\t\t\tin your listening environment that might have impeded your ability to clearly \n\t\t\t\thear details in the audio. \\n\\n**NOTE:** Your answer will not affect your \n\t\t\t\tcompensation.`}</ReactMarkdown>\n\t\t\t<textarea rows=\"4\" onChange={e => setTextInput(e.target.value)} placeholder=\"My neighbor started moving their lawn.\"></textarea>\n\t\t\t<div className='section col-2 align-right'>\n\t\t\t\t<a href=\"#\" className=\"button\" onClick={() => checkTextInput(index, setIndex, textInput)}>Submit</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction Cond_stimuli(index, setIndex, audioRef_1, audioRef_2, audioRef_3, UpdateAudio) {\n\tconst [choice, setChoice] = useState(-1);\n\tconst [textInput, setTextInput] = useState('');\n\tconst [refEnded, setRefEnded] = useState(false);\n\tconst [firstEnded, setFirstEnded] = useState(false);\n\tconst [secondEnded, setSecondEnded] = useState(false);\n\n\t// Instruction Page\n\tif (index === 0) {\n\t\treturn Instruction_Page(audioRef_1, index, setIndex, UpdateAudio);\n\t} \n\t// Example Page\n\telse if (index === 1) {\n\t\treturn Task_Page(audioRef_1, audioRef_2, audioRef_3, index, setIndex, \n\t\t\tchoice, setChoice, UpdateAudio, refEnded, setRefEnded, \n\t\t\tfirstEnded, setFirstEnded, secondEnded, setSecondEnded);\n\t}\n\telse {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<ReactMarkdown>{`#### Thank you for your participation.`}</ReactMarkdown>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default function ABX() {\t\n\n\tconst [index, setIndex] = useState(0);\n\n\tconst audioRef_1 = useRef();\n\tconst audioRef_2 = useRef();\n\tconst audioRef_3 = useRef();\n\n\tconst UpdateAudio = (source) => {\n\t    if(audioRef_1.current) {\n\t        audioRef_1.current.pause();\n\t        audioRef_1.current.load();\n\t    } \n\t    if (audioRef_2.current) {\n\t    \taudioRef_2.current.pause();\n\t    \taudioRef_2.current.load();\n\t    } \n\t    if (audioRef_3.current) {\n\t    \taudioRef_3.current.pause();\n\t    \taudioRef_3.current.load();\n\t    }\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{Cond_stimuli(index, setIndex, audioRef_1, audioRef_2, audioRef_3, UpdateAudio)}\n\t\t</div>\n\t);\n}","import React from 'react'\n\nimport ABX from './user-studies/abx'\n\nimport './css/user-study.css'\n\n\nexport default function UserStudy() {\n  return (\n    <div className='user-study'>\n      <ABX />\n    </div>);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './css/index.css';\nimport UserStudy from './user-study';\n\n\n/*******************************************************************************\nEntry point\n*******************************************************************************/\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <UserStudy />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}